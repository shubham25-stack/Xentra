import crypto from 'crypto';
import fs from 'fs';


const algorithm = 'aes-256-cbc';


export function encryptEnv(password) {
const iv = crypto.randomBytes(16);
const key = crypto.scryptSync(password, 'salt', 32);
const envData = fs.readFileSync('.env', 'utf8');
const cipher = crypto.createCipheriv(algorithm, key, iv);
let encrypted = cipher.update(envData, 'utf8', 'hex');
encrypted += cipher.final('hex');
fs.writeFileSync('encrypted.env', iv.toString('hex') + ':' + encrypted);
console.log(' .env encrypted successfully!');
}


export function decryptEnv(password) {
const data = fs.readFileSync('encrypted.env', 'utf8').split(':');
const iv = Buffer.from(data.shift(), 'hex');
const encryptedText = data.join(':');
const key = crypto.scryptSync(password, 'salt', 32);
const decipher = crypto.createDecipheriv(algorithm, key, iv);
let decrypted = decipher.update(encryptedText, 'hex', 'utf8');
decrypted += decipher.final('utf8');
fs.writeFileSync('.env', decrypted);
console.log('ðŸ”“ Environment decrypted successfully!');
}

if (process.argv[2] === 'encrypt') encryptEnv(process.argv[3]);
if (process.argv[2] === 'decrypt') decryptEnv(process.argv[3]);
